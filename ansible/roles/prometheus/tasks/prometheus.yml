---
# - name: Install Prometheus
# vars:
# certificate_path: /var/run/secrets/kubernetes.io/serviceaccount

- name: Load default vars
  include_vars:
    file: main.yml

- name: Create Directories.
  block:
  - name: mkdir {{ prometheus_config_path }}
    file:
      path: "{{ prometheus_config_path }}"
      state: directory
      mode: 0755
  - name: mkdir {{ prometheus_config_path }}/rules
    file:
      path: "{{ prometheus_config_path }}/rules"
      state: directory
      mode: 0755
  - name: mkdir {{ prometheus_config_path }}/alerts
    file:
      path: "{{ prometheus_config_path }}/alerts"
      state: directory
      mode: 0755
  # mkdir /var/run/secrets/kubernetes.io/serviceaccount
  - name: mkdir certs ({{ certificate_path }})
    file:
      path: "{{ certificate_path }}"
      state: directory
      mode: 0755
    notify:
      - "{{ prometheus_restart_handler }}"
  # endblock

- name: Upload Certs.
  block:
  # these will need to be pulled from a Vault.
  # Prometheus runs as nsfnobdy, so this is a compromise for file permissions for the certs
  - name: copy ca.pem
    copy:
      src: ../../../../certs/ca.pem
      dest: "{{ certificate_path }}/ca.pem"
      owner: root
      group: nfsnobody
      mode: 0440
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy ca-key.pem
    copy:
      src: ../../../../certs/ca-key.pem
      dest: "{{ certificate_path }}/ca-key.pem"
      owner: root
      group: nfsnobody
      mode: 0440
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy prometheus.crt
    copy:
      src: ../../../../certs/prometheus.crt
      dest: "{{ certificate_path }}/prometheus.crt"
      owner: root
      group: nfsnobody
      mode: 0440
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy prometheus.key
    copy:
      src: ../../../../certs/prometheus.key
      dest: "{{ certificate_path }}/prometheus.key"
      owner: root
      group: nfsnobody
      mode: 0440
    notify:
      - "{{ prometheus_restart_handler }}"

- name: Upload Files.
  block:
  # These may be pulled from Git.
  - name: copy prometheus.yml
    template:
      src: prometheus.j2
      dest: "{{ prometheus_config_path }}/prometheus.yml"
      owner: root
      group: root
      mode: 0644
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy rules.xml
    copy:
      src: "..{{ prometheus_config_path }}/rules/rules.yml"
      dest: "{{ prometheus_config_path }}/rules/rules.yml"
      owner: root
      group: root
      mode: 0644
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy alerts.xml
    copy:
      src: "..{{ prometheus_config_path }}/alerts/alerts.yml"
      dest: "{{ prometheus_config_path }}/alerts/alerts.yml"
      owner: root
      group: root
      mode: 0644
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy alerting.xml
    template:
      src: alerting.j2
      dest: "{{ prometheus_config_path }}/alerts/alerting.yml"
      owner: root
      group: root
      mode: 0644
    notify:
      - "{{ prometheus_restart_handler }}"

- name: Start Prometheus
  # create container is there is no container.
  docker_container:
    name: "{{ prometheus_container_name }}"
    image: "{{ prometheus_docker_image }}:{{ prometheus_docker_tag }}"
    ports:
      - "{{ prometheus_port }}:{{ prometheus_port }}"
    volumes:
      - "{{ prometheus_config_path }}:{{ prometheus_config_path }}:rw"
      - "{{ prometheus_data_path }}:{{ prometheus_data_path }}:rw"
      - "{{ certificate_path }}:{{ certificate_path }}:ro"
    command: [ "--config.file={{ prometheus_config_path }}/prometheus.yml", "--storage.tsdb.path={{ prometheus_data_path }}", "--web.route-prefix=/", "--web.external-url=https://{{ prometheus_fqdn }}" ]
    state: started
