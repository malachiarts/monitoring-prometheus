---
# - name: Install Prometheus
# vars:
# certificate_path: /var/run/secrets/kubernetes.io/serviceaccount

- name: Load default vars
  include_vars:
    file: main.yml

- name: Create Directories.
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ prometheus_config_path }}"
    - "{{ certificate_path }}"

- name: Upload Certs.
  # these will need to be pulled from a Vault.
  # Prometheus runs as nsfnobdy, so this is a compromise for file permissions for the certs
  copy:
    src: ../../../../certs/ca.pem
    dest: "{{ certificate_path }}/ca.pem"
    owner: root
    group: nfsnobody
    mode: 0440
  with_items:
    - ../../../../certs/ca.pem
    - ../../../../certs/ca-key.pem
    - ../../../../certs/prometheus.crt
    - ../../../../certs/prometheus.key
  notify:
    - "{{ prometheus_restart_handler }}"

- name: Upload Files.
  block:
  # These may be pulled from Git.
  - name: copy templates
    template:
      src: "{{ item.src }}"
      dest: "{{ prometheus_config_path }}/{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - { src: prometheus.j2, dest: prometheus.conf }
      - { src: alerting.j2, dest: alerting.conf }
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy rules.xml and alerts
    copy:
      src: "{{ item }}"
      dest: "{{ prometheus_config_path }}/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - rules.yml
      - alerts.yml
    notify:
      - "{{ prometheus_restart_handler }}"

- name: Start Prometheus
  # create container is there is no container.
  docker_container:
    name: "{{ prometheus_container_name }}"
    image: "{{ prometheus_docker_image }}:{{ prometheus_docker_tag }}"
    ports:
      - "{{ prometheus_port }}:{{ prometheus_port }}"
    volumes:
      - "{{ prometheus_config_path }}:{{ prometheus_config_path }}:rw"
      - "{{ prometheus_data_path }}:{{ prometheus_data_path }}:rw"
      - "{{ certificate_path }}:{{ certificate_path }}:ro"
    command: [ "--config.file={{ prometheus_config_path }}/prometheus.yml", "--storage.tsdb.path={{ prometheus_data_path }}", "--web.route-prefix=/", "--web.external-url=https://{{ prometheus_fqdn }}" ]
    state: started
