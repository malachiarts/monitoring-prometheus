---
instance: tycho
domain: majustfortesting.com
# Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
docker_version: '18.06.1'
docker_edition: 'ce'
docker_package: "docker-{{docker_version}}{{ docker_edition }}"
docker_package_state: present

# k8s
# instead of 'live' it should be {{ kubotancluster }}.
kubernetes_server: "{{ instance }}-api-test.{{ instance }}.{{ domain }}"
kubernetes_port: 6443

# Prometheus runs as 65534. So to keep things simple permission-wise,
# we're running Grafana as 65534.
# Use IDs for docker container startup.
app_user: 65534
app_group: 65534

# Prometheus
prometheus_fqdn: prom-{{ instance }}-test.{{ domain }}
prometheus_docker_image: prom/prometheus
prometheus_docker_tag: v2.7.1
prometheus_container_name: prometheus
# prometheus_server: "{{ ansible_fqdn }}"
prometheus_server: "{{ ansible_default_ipv4.address }}"
prometheus_port: 9090
prometheus_config_path: /etc/prometheus
# Mount point created in Terraform
prometheus_data_path: /monitoring/prometheus
prometheus_evaluation_interval: 1m
prometheus_scrape_interval: 1m
prometheus_scrape_timeout: 10s
# Mirroring path of Kubernetes
certificate_path: /etc/kubernetes/ssl

# alert manager
# optional: {{ ansible_default_ipv4.address }}
alertmanager_docker_image: prom/alertmanager
alertmanager_docker_tag: v0.16.1
alertmanager_container_name: alertmanager
alertmanager_server: "{{ ansible_default_ipv4.address }}"
alertmanager_port: 9093
alertmanager_config_path: /etc/alertmanager
alertmanager_data_path: /monitoring/alertmanager

alertmanager_slack_name: 'ma_slack'
alertmanager_slack_channel: '#test_alerts'
alertmanager_slack_webhook: https://hooks.slack.com/services/{{ alertmanager.slack_token }}

# grafana
grafana_docker_image: grafana/grafana
grafana_docker_tag: 5.4.3
grafana_container_name: grafana
grafana_server: "{{ ansible_default_ipv4.address }}"
grafana_port: 3000
grafana_config_path: /etc/grafana
grafana_data_path: /monitoring/grafana/data
grafana_log_path: /var/log/grafana
grafana_dashboards_path: "{{ grafana_data_path }}/dashboards"
grafana_provisioning_synced: false

grafana_datasources:
  - name: "Prometheus"
    type: "prometheus"
    orgId: 1
    access: "proxy"
    url: "http://{{ prometheus_server }}:{{ prometheus_port }}"
    basicAuth: false
    basicAuthUser: ""
    basicAuthPassword: ""
    isDefault: true
    readOnly: false
    jsonData:
      httpMethod: "GET"
      keepCookies: []
      tlsAuth: false
      tlsAuthWithCACert: false
      tlsSkipVerify: true

# Nginx
nginx_docker_image: nginx
nginx_docker_tag: 1.15.8
nginx_container_name: nginx
nginx_config_path: /etc/nginx
nginx_certificate_path: /root/certs
nginx_log_path: /var/log/nginx
nginx_port: 443

ldap_server: ldaps://ldap.jumpcloud.com:636
ldap_basedn: ou=Users,o={{ ldap_organization }},dc=jumpcloud,dc=com
ldap_binddn: uid=ldapservice,ou=Users,o={{ ldap_organization }},dc=jumpcloud,dc=com

ldap_auth_container_name: ldap_auth
ldap_auth_docker_image: linuxserver/ldap-auth
ldap_auth_docker_tag: 3.2.0-ls26
ldap_auth_server: "{{ ansible_default_ipv4.address }}"
ldap_auth_port: 8888
ldap_auth_login_port: 9000
ldap_auth_config_path: /etc/openldap
ldap_auth_certs_path: "{{ ldap_auth_config_path }}/cacerts"
ldap_auth_script_path: "/usr/local/bin/{{ ldap_auth_container_name }}"

prometheus_restart_handler: restart prometheus
alertmanager_restart_handler: restart alertmanager
grafana_restart_handler: restart grafana
proxy_restart_handler: restart proxy
