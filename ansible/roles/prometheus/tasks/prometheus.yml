---
# - name: Install Prometheus
# vars:
# certificate_path: /var/run/secrets/kubernetes.io/serviceaccount
- name: Create Directories for Prometheus.
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
  with_items:
    - "{{ prometheus_config_path }}"
    - "{{ prometheus_data_path }}"
    - "{{ certificate_path }}"

- name: Upload Certs for Prometheus.
  # Prometheus runs as nsfnobdy, so this is a compromise for file permissions for the certs
  copy:
    src: certs/{{ item.src }}
    dest: "{{ certificate_path }}/{{ item.dest }}"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: 0400
  with_items:
    - { src: "k8s.{{ cluster }}.ca.pem", dest: ca.pem }
    - { src: "k8s.{{ cluster }}.prometheus.crt", dest: prometheus.crt }
    - { src: "k8s.{{ cluster }}.prometheus.key", dest: prometheus.key }
    - { src: "k8s.{{ cluster }}.ca-etcd.pem", dest: ca-etcd.pem }
    - { src: "k8s.{{ cluster }}.prometheus-etcd.crt", dest: prometheus-etcd.crt }
    - { src: "k8s.{{ cluster }}.prometheus-etcd.key", dest: prometheus-etcd.key }
  notify:
    - "{{ prometheus_restart_handler }}"

- name: Upload Files for Prometheus.
  block:
  # These may be pulled from Git.
  - name: copy templates
    template:
      src: "{{ item.src }}"
      dest: "{{ prometheus_config_path }}/{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - { src: prometheus.j2,   dest: prometheus.yml }
      - { src: alerting.j2,     dest: alerting.yml }
      - { src: alerts.j2,       dest: alerts.yml }
      - { src: etcd3-alerts.j2, dest: etcd3-alerts.yml }
    notify:
      - "{{ prometheus_restart_handler }}"
  - name: copy prod specific alerts
    template:
      src: alerts-by-env.j2
      dest: "{{ prometheus_config_path }}/alerts-prod.yml"
      owner: root
      group: root
      mode: 0644
    vars:
      env: prod
  - name: copy qa specific alerts
    template:
      src: alerts-by-env.j2
      dest: "{{ prometheus_config_path }}/alerts-qa.yml"
      owner: root
      group: root
      mode: 0644
    vars:
      env: qa
  - name: copy rules.xml
    copy:
      src: "{{ item }}"
      dest: "{{ prometheus_config_path }}/{{ item }}"
      owner: root
      group: root
      mode: 0644
    with_items:
      - rules.yml
    notify:
      - "{{ prometheus_restart_handler }}"

- name: Starting Prometheus
  # create container is there is no container.
  docker_container:
    name: "{{ prometheus_container_name }}"
    image: "{{ prometheus_docker_image }}:{{ prometheus_docker_tag }}"
    ports:
      - "{{ prometheus_port }}:{{ prometheus_port }}"
    volumes:
      - "{{ prometheus_config_path }}:{{ prometheus_config_path }}:rw"
      - "{{ prometheus_data_path }}:{{ prometheus_data_path }}:rw"
      - "{{ certificate_path }}:{{ certificate_path }}:ro"
    command: [ "--config.file={{ prometheus_config_path }}/prometheus.yml", "--storage.tsdb.path={{ prometheus_data_path }}", "--web.route-prefix=/", "--web.external-url=https://{{ prometheus_fqdn }}" ]
    state: started
