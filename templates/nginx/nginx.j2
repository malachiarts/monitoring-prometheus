#
# X Phase 1: Setup reverse proxy.
# X Phase 2: Setup basic auth.
# X Phase 3: Move it to HTTPS.
# - Phase 4: Move auth to LDAP. 
#
worker_processes 1;

events {
  worker_connections 1024;
}

http {
  # These will use internal HOST IPs/FQDN so container can talk to container.
  upstream prometheus {
    server {{ prometheus_server }}:{{ prometheus_port }};
    keepalive 75;
  }
  upstream alertmanager {
    server {{ alertmanager_server }}:{{ alertmanager_port }};
    keepalive 75;
  }

  server {
    listen      443 ssl http2;
    listen      [::]:443 ssl http2;
    server_name {{ prometheus_fqdn }};

    access_log /var/log/nginx/nginx.access.log;
    error_log  /var/log/nginx/nginx.error.log;

    # SSL best practices from https://www.linode.com/docs/web-servers/nginx/tls-deployment-best-practices-for-nginx/
    ssl_certificate     /root/certs/fullchain.pem;
    ssl_certificate_key /root/certs/privkey.pem;
    # ssl_dhparam         /root/certs/dhparam4096.pem;
    ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1.1 TLSv1.2;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    ssl_stapling            on;
    ssl_stapling_verify     on;
    ssl_trusted_certificate /root/certs/chain.pem;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    auth_basic           "Restricted Area";
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd;

    proxy_set_header   Host              $http_host;   # required for docker client's sake
    proxy_set_header   X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_read_timeout 900;
    chunked_transfer_encoding on;

    # Proxy to Prometheus UI.
    location ^~ / {
      proxy_pass        http://prometheus;
      # Necessary for redirects. Was getting too many redirects before.
      proxy_redirect    http://prometheus/    https://$http_host/;
    }
    # Proxy to Alertmanager UI.
    location ^~ /am {
      rewrite ^/am/(.*)$ /$1 break;
      proxy_pass        http://alertmanager;
      proxy_redirect    http://alertmanager/    https://$http_host/;
    }
  }
}
